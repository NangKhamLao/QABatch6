{"name": "test_search_admin", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010062c708 cxxbridge1$str$ptr + 2729312\n1   chromedriver                        0x000000010062496c cxxbridge1$str$ptr + 2697156\n2   chromedriver                        0x0000000100176728 cxxbridge1$string$len + 90444\n3   chromedriver                        0x00000001001bd9b8 cxxbridge1$string$len + 381916\n4   chromedriver                        0x00000001001ff0c4 cxxbridge1$string$len + 649960\n5   chromedriver                        0x00000001001b1bc0 cxxbridge1$string$len + 333284\n6   chromedriver                        0x00000001005f0298 cxxbridge1$str$ptr + 2482416\n7   chromedriver                        0x00000001005f352c cxxbridge1$str$ptr + 2495364\n8   chromedriver                        0x00000001005d1ae0 cxxbridge1$str$ptr + 2357560\n9   chromedriver                        0x00000001005f3db4 cxxbridge1$str$ptr + 2497548\n10  chromedriver                        0x00000001005c2dec cxxbridge1$str$ptr + 2296900\n11  chromedriver                        0x0000000100613c4c cxxbridge1$str$ptr + 2628260\n12  chromedriver                        0x0000000100613dd8 cxxbridge1$str$ptr + 2628656\n13  chromedriver                        0x00000001006245b8 cxxbridge1$str$ptr + 2696208\n14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8", "trace": "setup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"057f01d08835f43f2587b2a7ccbe323c\")>\ntmp_path = PosixPath('/private/var/folders/__/jvrrwqhn1tz0mw2pbqpqc3mm0000gn/T/pytest-of-user/pytest-3/test_search_admin0')\n\n    @pytest.fixture()\n    def login_as_admin(setup_teardown, tmp_path):\n        driver = setup_teardown\n        wait = WebDriverWait(driver, 10)\n>       name = wait.until(EC.visibility_of_element_located((By.NAME, \"username\")))\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"057f01d08835f43f2587b2a7ccbe323c\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x104a8f7e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010062c708 cxxbridge1$str$ptr + 2729312\nE       1   chromedriver                        0x000000010062496c cxxbridge1$str$ptr + 2697156\nE       2   chromedriver                        0x0000000100176728 cxxbridge1$string$len + 90444\nE       3   chromedriver                        0x00000001001bd9b8 cxxbridge1$string$len + 381916\nE       4   chromedriver                        0x00000001001ff0c4 cxxbridge1$string$len + 649960\nE       5   chromedriver                        0x00000001001b1bc0 cxxbridge1$string$len + 333284\nE       6   chromedriver                        0x00000001005f0298 cxxbridge1$str$ptr + 2482416\nE       7   chromedriver                        0x00000001005f352c cxxbridge1$str$ptr + 2495364\nE       8   chromedriver                        0x00000001005d1ae0 cxxbridge1$str$ptr + 2357560\nE       9   chromedriver                        0x00000001005f3db4 cxxbridge1$str$ptr + 2497548\nE       10  chromedriver                        0x00000001005c2dec cxxbridge1$str$ptr + 2296900\nE       11  chromedriver                        0x0000000100613c4c cxxbridge1$str$ptr + 2628260\nE       12  chromedriver                        0x0000000100613dd8 cxxbridge1$str$ptr + 2628656\nE       13  chromedriver                        0x00000001006245b8 cxxbridge1$str$ptr + 2696208\nE       14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "start": 1751689134821, "stop": 1751689134821, "uuid": "5ef34ce9-a8e5-45c5-95bc-42b58fda2834", "historyId": "ea4da3bc5fb02cac75cf4d09767ce5d8", "testCaseId": "ea4da3bc5fb02cac75cf4d09767ce5d8", "fullName": "test_admin#test_search_admin", "labels": [{"name": "suite", "value": "test_admin"}, {"name": "host", "value": "Lao-Lao-Mac.local"}, {"name": "thread", "value": "7776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_admin"}]}