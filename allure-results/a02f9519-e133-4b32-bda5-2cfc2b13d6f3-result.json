{"name": "test_add_admin[lily1-admin123-admin123-error_msg0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100c28708 cxxbridge1$str$ptr + 2729312\n1   chromedriver                        0x0000000100c2096c cxxbridge1$str$ptr + 2697156\n2   chromedriver                        0x0000000100772728 cxxbridge1$string$len + 90444\n3   chromedriver                        0x00000001007b99b8 cxxbridge1$string$len + 381916\n4   chromedriver                        0x00000001007fb0c4 cxxbridge1$string$len + 649960\n5   chromedriver                        0x00000001007adbc0 cxxbridge1$string$len + 333284\n6   chromedriver                        0x0000000100bec298 cxxbridge1$str$ptr + 2482416\n7   chromedriver                        0x0000000100bef52c cxxbridge1$str$ptr + 2495364\n8   chromedriver                        0x0000000100bcdae0 cxxbridge1$str$ptr + 2357560\n9   chromedriver                        0x0000000100befdb4 cxxbridge1$str$ptr + 2497548\n10  chromedriver                        0x0000000100bbedec cxxbridge1$str$ptr + 2296900\n11  chromedriver                        0x0000000100c0fc4c cxxbridge1$str$ptr + 2628260\n12  chromedriver                        0x0000000100c0fdd8 cxxbridge1$str$ptr + 2628656\n13  chromedriver                        0x0000000100c205b8 cxxbridge1$str$ptr + 2696208\n14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8", "trace": "login_as_admin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"65d734b1b30083df2d6e57acdf882231\")>\nusername = 'lily1', password = 'admin123', confirm_password = 'admin123', error_msg = []\n\n    @pytest.mark.parametrize(\"username, password, confirm_password,error_msg\",[\n        (\"lily1\", \"admin123\", \"admin123\", []),\n        (\"lily\", \"admin123\", \"admin123\", [\"Should be at least 5 characters\"]),\n        (\"lily2\", \"admin\",\"admin\", [\"Should have at least 7 characters\"]),\n        (\"lily3\", \"admin123\", \"admin\", [\"Passwords do not match\"]),\n        (\"\",\"\",\"\", [\"Required\"])\n    ])\n    def test_add_admin(login_as_admin,username,password,confirm_password,error_msg):\n        driver = login_as_admin\n        wait = WebDriverWait(driver, 10)\n        admin_tab = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, \"Admin\")))\n        admin_tab.click()\n    \n        add_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Add']\")))\n        add_btn.click()\n    \n        #user role\n        user_role = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='User Role']/following::div[1]\")))\n        actions = ActionChains(driver)\n        actions.move_to_element(user_role).click().send_keys(Keys.ARROW_DOWN).send_keys(Keys.ARROW_DOWN).send_keys(Keys.ENTER).perform()\n    \n        #employee name\n        em_name = wait.until(EC.visibility_of_element_located((By.XPATH, \"//input[@placeholder='Type for hints...']\")))\n        em_name.send_keys(\"em\")\n        time.sleep(4)\n        ActionChains(driver).move_to_element(em_name).click().send_keys(Keys.ARROW_DOWN).send_keys(Keys.ENTER).perform()\n    \n        #status\n        status = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Status']/following::div[1]\")))\n        status.click()\n        enable_option = wait.until(EC.element_to_be_clickable((By.XPATH, \"//span[text()='Enabled']\")))\n        enable_option.click()\n    \n        #username\n        username1 = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Username']/following::div[1]/input\")))\n        username1.send_keys(username)\n    \n        #password\n        password1 = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Password']/following::div[1]/input\")))\n        password1.send_keys(password)\n    \n        #confirm password\n        com_pass = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[text()='Confirm Password']/following::div[1]/input\")))\n        com_pass.send_keys(confirm_password)\n    \n        #click save btn\n        save_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[@type='submit']\")))\n        save_btn.click()\n    \n        #if expected error message displayed, validate\n        if error_msg:\n            for error in error_msg:\n                msg = wait.until(EC.visibility_of_element_located((By.XPATH,f\"//span[normalize-space()='{error}']\")))\n                assert msg.is_displayed(), \"Expected error message is not displayed\"\n        else:\n>           toast = wait.until(EC.visibility_of_element_located((By.XPATH, \"//*[contains(.,'Successfully')]\")))\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_admin.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"65d734b1b30083df2d6e57acdf882231\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10716af20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100c28708 cxxbridge1$str$ptr + 2729312\nE       1   chromedriver                        0x0000000100c2096c cxxbridge1$str$ptr + 2697156\nE       2   chromedriver                        0x0000000100772728 cxxbridge1$string$len + 90444\nE       3   chromedriver                        0x00000001007b99b8 cxxbridge1$string$len + 381916\nE       4   chromedriver                        0x00000001007fb0c4 cxxbridge1$string$len + 649960\nE       5   chromedriver                        0x00000001007adbc0 cxxbridge1$string$len + 333284\nE       6   chromedriver                        0x0000000100bec298 cxxbridge1$str$ptr + 2482416\nE       7   chromedriver                        0x0000000100bef52c cxxbridge1$str$ptr + 2495364\nE       8   chromedriver                        0x0000000100bcdae0 cxxbridge1$str$ptr + 2357560\nE       9   chromedriver                        0x0000000100befdb4 cxxbridge1$str$ptr + 2497548\nE       10  chromedriver                        0x0000000100bbedec cxxbridge1$str$ptr + 2296900\nE       11  chromedriver                        0x0000000100c0fc4c cxxbridge1$str$ptr + 2628260\nE       12  chromedriver                        0x0000000100c0fdd8 cxxbridge1$str$ptr + 2628656\nE       13  chromedriver                        0x0000000100c205b8 cxxbridge1$str$ptr + 2696208\nE       14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "parameters": [{"name": "username", "value": "'lily1'"}, {"name": "password", "value": "'admin123'"}, {"name": "confirm_password", "value": "'admin123'"}, {"name": "error_msg", "value": "[]"}], "start": 1751685782670, "stop": 1751685801613, "uuid": "a416c1bb-2d19-4584-a1d2-022f96649e99", "historyId": "34f4473baa1999561fa12f73a65d49bd", "testCaseId": "bc12d9b99147718b3074799c0e5b1d31", "fullName": "test_admin#test_add_admin", "labels": [{"name": "suite", "value": "test_admin"}, {"name": "host", "value": "Lao-Lao-Mac.local"}, {"name": "thread", "value": "6598-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_admin"}]}