{"name": "test_edit_employee", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-957b4417=\"\" class=\"\">...</div> is not clickable at point (719, 543). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\n  (Session info: chrome=138.0.7204.51)\nStacktrace:\n0   chromedriver                        0x0000000100ae0708 cxxbridge1$str$ptr + 2729312\n1   chromedriver                        0x0000000100ad896c cxxbridge1$str$ptr + 2697156\n2   chromedriver                        0x000000010062a728 cxxbridge1$string$len + 90444\n3   chromedriver                        0x000000010067751c cxxbridge1$string$len + 405312\n4   chromedriver                        0x0000000100675a88 cxxbridge1$string$len + 398508\n5   chromedriver                        0x000000010067389c cxxbridge1$string$len + 389824\n6   chromedriver                        0x0000000100672c98 cxxbridge1$string$len + 386748\n7   chromedriver                        0x0000000100667700 cxxbridge1$string$len + 340260\n8   chromedriver                        0x000000010066718c cxxbridge1$string$len + 338864\n9   chromedriver                        0x00000001006b30c4 cxxbridge1$string$len + 649960\n10  chromedriver                        0x0000000100665bc0 cxxbridge1$string$len + 333284\n11  chromedriver                        0x0000000100aa4298 cxxbridge1$str$ptr + 2482416\n12  chromedriver                        0x0000000100aa752c cxxbridge1$str$ptr + 2495364\n13  chromedriver                        0x0000000100a85ae0 cxxbridge1$str$ptr + 2357560\n14  chromedriver                        0x0000000100aa7db4 cxxbridge1$str$ptr + 2497548\n15  chromedriver                        0x0000000100a76dec cxxbridge1$str$ptr + 2296900\n16  chromedriver                        0x0000000100ac7c4c cxxbridge1$str$ptr + 2628260\n17  chromedriver                        0x0000000100ac7dd8 cxxbridge1$str$ptr + 2628656\n18  chromedriver                        0x0000000100ad85b8 cxxbridge1$str$ptr + 2696208\n19  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\n20  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8", "trace": "login_as_admin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e2a24a7903afd1054e956330fa7ae6ca\")>\n\n    def test_edit_employee(login_as_admin):\n        driver = login_as_admin\n        wait = WebDriverWait(driver, 10)\n    \n        search_employee(driver, wait, \"Nang\")\n    \n        edit_icon = wait.until(EC.element_to_be_clickable((By.XPATH, \"//div[@class='orangehrm-container']//button[1]\")))\n        edit_icon.click()\n    \n        #driver license no\n        licenseNo = wait.until(EC.visibility_of_element_located((By.XPATH, \"//label[contains(text(),'License Number')]/following::div/input\")))\n        licenseNo.clear()\n        licenseNo.send_keys(\"OK0011011\")\n    \n        #license expire date\n        license_exp = wait.until(\n            EC.visibility_of_element_located((By.XPATH, \"//label[text()='License Expiry Date']/following::input[1]\")))\n        license_exp.clear()\n        license_exp.send_keys(\"2029-01-01\")\n    \n        #nationality\n        nationality = wait.until(\n            EC.element_to_be_clickable((By.XPATH, \"//label[text()='Nationality']/following::div\")))\n>       nationality.click()\n\ntest_PIM.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106777110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...0001893a6c0c _pthread_start + 136\\\\n20  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-957b4417=\"\" class=\"\">...</div> is not clickable at point (719, 543). Other element would receive the click: <div data-v-d5bfe35b=\"\" class=\"oxd-form-loader\">...</div>\nE         (Session info: chrome=138.0.7204.51)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100ae0708 cxxbridge1$str$ptr + 2729312\nE       1   chromedriver                        0x0000000100ad896c cxxbridge1$str$ptr + 2697156\nE       2   chromedriver                        0x000000010062a728 cxxbridge1$string$len + 90444\nE       3   chromedriver                        0x000000010067751c cxxbridge1$string$len + 405312\nE       4   chromedriver                        0x0000000100675a88 cxxbridge1$string$len + 398508\nE       5   chromedriver                        0x000000010067389c cxxbridge1$string$len + 389824\nE       6   chromedriver                        0x0000000100672c98 cxxbridge1$string$len + 386748\nE       7   chromedriver                        0x0000000100667700 cxxbridge1$string$len + 340260\nE       8   chromedriver                        0x000000010066718c cxxbridge1$string$len + 338864\nE       9   chromedriver                        0x00000001006b30c4 cxxbridge1$string$len + 649960\nE       10  chromedriver                        0x0000000100665bc0 cxxbridge1$string$len + 333284\nE       11  chromedriver                        0x0000000100aa4298 cxxbridge1$str$ptr + 2482416\nE       12  chromedriver                        0x0000000100aa752c cxxbridge1$str$ptr + 2495364\nE       13  chromedriver                        0x0000000100a85ae0 cxxbridge1$str$ptr + 2357560\nE       14  chromedriver                        0x0000000100aa7db4 cxxbridge1$str$ptr + 2497548\nE       15  chromedriver                        0x0000000100a76dec cxxbridge1$str$ptr + 2296900\nE       16  chromedriver                        0x0000000100ac7c4c cxxbridge1$str$ptr + 2628260\nE       17  chromedriver                        0x0000000100ac7dd8 cxxbridge1$str$ptr + 2628656\nE       18  chromedriver                        0x0000000100ad85b8 cxxbridge1$str$ptr + 2696208\nE       19  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\nE       20  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "start": 1751681733769, "stop": 1751681743802, "uuid": "f5b6b6f4-32e9-4a85-8d6f-18e018c4da9e", "historyId": "14918619124c5193095f0a998c9e411c", "testCaseId": "14918619124c5193095f0a998c9e411c", "fullName": "test_PIM#test_edit_employee", "labels": [{"name": "suite", "value": "test_PIM"}, {"name": "host", "value": "Lao-Lao-Mac.local"}, {"name": "thread", "value": "5089-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_PIM"}]}