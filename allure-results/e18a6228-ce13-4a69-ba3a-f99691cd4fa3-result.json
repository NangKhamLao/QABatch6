{"name": "test_valid_login[admin-admin123-False]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001034a0708 cxxbridge1$str$ptr + 2729312\n1   chromedriver                        0x000000010349896c cxxbridge1$str$ptr + 2697156\n2   chromedriver                        0x0000000102fea728 cxxbridge1$string$len + 90444\n3   chromedriver                        0x00000001030319b8 cxxbridge1$string$len + 381916\n4   chromedriver                        0x00000001030730c4 cxxbridge1$string$len + 649960\n5   chromedriver                        0x0000000103025bc0 cxxbridge1$string$len + 333284\n6   chromedriver                        0x0000000103464298 cxxbridge1$str$ptr + 2482416\n7   chromedriver                        0x000000010346752c cxxbridge1$str$ptr + 2495364\n8   chromedriver                        0x0000000103445ae0 cxxbridge1$str$ptr + 2357560\n9   chromedriver                        0x0000000103467db4 cxxbridge1$str$ptr + 2497548\n10  chromedriver                        0x0000000103436dec cxxbridge1$str$ptr + 2296900\n11  chromedriver                        0x0000000103487c4c cxxbridge1$str$ptr + 2628260\n12  chromedriver                        0x0000000103487dd8 cxxbridge1$str$ptr + 2628656\n13  chromedriver                        0x00000001034985b8 cxxbridge1$str$ptr + 2696208\n14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\n15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8", "trace": "username = 'admin', password = 'admin123', expected = False\nsetup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9d555aed646e0709321d7f9ec1156ec7\")>\n\n    @pytest.mark.parametrize(\"username, password, expected\",[\n        (\"Admin\", \"admin123\", True),\n        (\"Admin\",\"admin\", False),\n        (\"admin\",\"admin123\", False),\n        (\"aaaa\",\"aaaa\", False),\n    ])\n    def test_valid_login(username, password, expected,setup_teardown):\n        driver = setup_teardown\n        wait = WebDriverWait(driver, 10)\n        name = wait.until(EC.visibility_of_element_located((By.NAME, \"username\")))\n        name.send_keys(username)\n        pword = wait.until(EC.visibility_of_element_located((By.NAME, \"password\")))\n        pword.send_keys(password)\n        login_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[@type='submit']\")))\n        login_btn.click()\n    \n        time.sleep(3)\n        if expected:\n            assert \"dashboard\" in driver.current_url, \"Login Failed\"\n    \n        else:\n>           err_msg= wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[@role='alert']\")))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_login.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9d555aed646e0709321d7f9ec1156ec7\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x104a23a60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001034a0708 cxxbridge1$str$ptr + 2729312\nE       1   chromedriver                        0x000000010349896c cxxbridge1$str$ptr + 2697156\nE       2   chromedriver                        0x0000000102fea728 cxxbridge1$string$len + 90444\nE       3   chromedriver                        0x00000001030319b8 cxxbridge1$string$len + 381916\nE       4   chromedriver                        0x00000001030730c4 cxxbridge1$string$len + 649960\nE       5   chromedriver                        0x0000000103025bc0 cxxbridge1$string$len + 333284\nE       6   chromedriver                        0x0000000103464298 cxxbridge1$str$ptr + 2482416\nE       7   chromedriver                        0x000000010346752c cxxbridge1$str$ptr + 2495364\nE       8   chromedriver                        0x0000000103445ae0 cxxbridge1$str$ptr + 2357560\nE       9   chromedriver                        0x0000000103467db4 cxxbridge1$str$ptr + 2497548\nE       10  chromedriver                        0x0000000103436dec cxxbridge1$str$ptr + 2296900\nE       11  chromedriver                        0x0000000103487c4c cxxbridge1$str$ptr + 2628260\nE       12  chromedriver                        0x0000000103487dd8 cxxbridge1$str$ptr + 2628656\nE       13  chromedriver                        0x00000001034985b8 cxxbridge1$str$ptr + 2696208\nE       14  libsystem_pthread.dylib             0x00000001893a6c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x00000001893a1b80 thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'admin123'"}, {"name": "expected", "value": "False"}], "start": 1751689250294, "stop": 1751689265538, "uuid": "32be71ca-5275-441f-b88c-413df0c25067", "historyId": "d74ed93027258850ae064088bd652e17", "testCaseId": "46f63ae83d79a814c2827139cf68b1cb", "fullName": "test_login#test_valid_login", "labels": [{"name": "suite", "value": "test_login"}, {"name": "host", "value": "Lao-Lao-Mac.local"}, {"name": "thread", "value": "7776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}